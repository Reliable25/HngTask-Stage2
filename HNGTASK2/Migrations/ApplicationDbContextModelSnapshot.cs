// <auto-generated />
using HNGTASK2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HNGTASK2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HNGTASK2.Models.Organisation", b =>
                {
                    b.Property<string>("OrgId")
                        .HasColumnType("text")
                        .HasColumnName("orgid");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("OrgId");

                    b.HasIndex("OrgId")
                        .IsUnique();

                    b.ToTable("organisations", (string)null);
                });

            modelBuilder.Entity("HNGTASK2.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("userid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("UserId");

                    b.HasIndex("UserId", "Email")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("HNGTASK2.Models.UserOrganisation", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("userid");

                    b.Property<string>("OrgId")
                        .HasColumnType("text")
                        .HasColumnName("orgid");

                    b.HasKey("UserId", "OrgId");

                    b.HasIndex("OrgId");

                    b.ToTable("userorganisations", (string)null);
                });

            modelBuilder.Entity("HNGTASK2.Models.UserOrganisation", b =>
                {
                    b.HasOne("HNGTASK2.Models.Organisation", "Organisation")
                        .WithMany("UserOrganisations")
                        .HasForeignKey("OrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HNGTASK2.Models.User", "User")
                        .WithMany("UserOrganisations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HNGTASK2.Models.Organisation", b =>
                {
                    b.Navigation("UserOrganisations");
                });

            modelBuilder.Entity("HNGTASK2.Models.User", b =>
                {
                    b.Navigation("UserOrganisations");
                });
#pragma warning restore 612, 618
        }
    }
}
